name: E2E Workflow

on: [push]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend/Services/e2e-tests/
    steps:
      - uses: actions/checkout@v3

      - name: Create .env file from GitHub secrets
        run: |
          echo "OAUTH2_JWT_ISSUER_URI=${{ secrets.OAUTH2_JWT_ISSUER_URI }}" >> .env
          echo "OAUTH2_JWT_AUDIENCES=${{ secrets.OAUTH2_JWT_AUDIENCES }}" >> .env
          echo "TEST_OAUTH2_JWT_ISSUER_URI=${{ secrets.OAUTH2_JWT_ISSUER_URI }}" >> .env
          echo "TEST_OAUTH2_JWT_AUDIENCES=${{ secrets.OAUTH2_JWT_AUDIENCES }}" >> .env
          echo "TEST_AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> .env
          echo "TEST_AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
          echo "MONGO_INITDB_URI=${{secrets.MONGO_INITDB_URI}}" >> .env

      - name: Run integration tests with Docker Compose
        run: |
          # Use -d to run in detached mode so we can extract reports later
          docker compose -f docker-compose-test.yaml up --build -d
          
          # Wait for the test to complete
          docker compose -f docker-compose-test.yaml logs -f test-runner
          
          # Get the container ID
          TEST_CONTAINER_ID=$(docker compose -f docker-compose-test.yaml ps -q test-runner)
          
          # Copy test reports from the container
          mkdir -p test-reports
          docker cp $TEST_CONTAINER_ID:/app/build/reports/tests/test/. test-reports/
          
          # Check if tests passed by looking at the exit code
          docker wait $TEST_CONTAINER_ID
          EXIT_CODE=$?
          
          exit $EXIT_CODE

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ./test-reports/

      - name: Clean up
        if: always()
        run: docker compose -f docker-compose-test.yaml down --volumes --remove-orphans